#! /usr/bin/env python

Import('env')

obj = env.genobj('shlib', env)
obj.src = """IPNAnimated.cpp
IPNLoadingProgess.cpp
IPNSerializable.cpp
IPNXMLSerializable.cpp
PN3DCamera.cpp
PN3DCameraModel.cpp
PN3DGround.cpp
PN3DObject.cpp
PN3DSkeletonAnimation.cpp
PN3DSkeletonObject.cpp
PNBool.cpp
PNBoolParameter.cpp
PNBoundingBox.cpp
PNBoundingSphere.cpp
PNCallBackList.cpp
PNCharacter.cpp
PNConf.cpp
PNConfPanel.cpp
PNConfigurableParameter.cpp
PNConfigurableParameterList.cpp
PNConsole.cpp
PNDie.cpp
PNEventManager.cpp
PNException.cpp
PNExportInterface.cpp
PNExportManager.cpp
PNFace.cpp
PNFloat.cpp
PNFloatParameter.cpp
PNGameInterface.cpp
PNGameMap.cpp
PNI18n.cpp
PNIAGraph.cpp
PNImportInterface.cpp
PNImportManager.cpp
PNInt.cpp
PNIntParameter.cpp
PNInterface.cpp
PNLine.cpp
PNLoadingProgressEventData.cpp
PNLocale.cpp
PNLockableObject.cpp
PNMatrix4f.cpp
PNMatrixTR4f.cpp
PNNormal3f.cpp
PNObject.cpp
PNPathFinding.cpp
PNPhysicsInterface.cpp
PNPlane.cpp
PNPlugin.cpp
PNPluginManager.cpp
PNPoint2f.cpp
PNPoint3f.cpp
PNPropertiesGridParameter.cpp
PNPropertiesGridParameterList.cpp
PNQuatf.cpp
PNRendererInterface.cpp
PNSoundInterface.cpp
PNStringParameter.cpp
PNTriangle.cpp
PNUInt.cpp
PNUIntParameter.cpp
PNVector3f.cpp
PNWPModel.cpp
PNWayPoint.cpp
PNWorldCollision.cpp
pnerror.cpp
""".split()
obj.target = 'libpncommon' + env['suffix']
obj.vnum = env['package_version']
obj.instdir = env['install_prefix'] + env['install_path'] + '/linux'
obj.cxxflags = ' '.join([env['FastDelegate_FLAGS'],env['XML_FLAGS'],env['Boost_FLAGS']])
obj.linkflags = ' '.join([env['XML_LDFLAGS'],env['Boost_LDFLAGS'],'-ldl','-lm'])
obj.execute()

